{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Route, Switch, useLocation } from 'react-router-dom';\n// import Cabezote from './componentes/Cabezote';\n// import Menu from './componentes/Menu';\n// import Footer from './componentes/Footer';\n\n// // Importa tus componentes de contenido\n// import Inicio from './componentes/Inicio';\n// import Usuarios from './componentes/Usuarios';\n// import Categorias from './componentes/Categorias';\n// import Productos from './componentes/Productos';\n// import Salidas from './componentes/Salidas';\n// import Clientes from './componentes/Clientes';\n// import Ventas from './componentes/Ventas';\n// import CrearVenta from './componentes/CrearVenta';\n// import EditarVenta from './componentes/EditarVenta';\n// import Reportes from './componentes/Reportes';\n// import NotFound from './componentes/NotFound';\n\n// const Home = () => {\n//     const [sesionIniciada, setSesionIniciada] = useState(false);\n//     const [cargando, setCargando] = useState(true);\n//     const location = useLocation();\n\n//     useEffect(() => {\n//       // Verificar si la sesión está iniciada\n//       const verificarSesion = async () => {\n//         try {\n//           // Aquí deberías hacer una llamada a tu API para verificar el token\n//           const token = localStorage.getItem('token');\n//           // Ejemplo de verificación (reemplaza esto con tu lógica real de verificación)\n//           if (token) {\n//             setSesionIniciada(true);\n//           } else {\n//             setSesionIniciada(false);\n//           }\n//         } catch (error) {\n//           console.error('Error al verificar la sesión:', error);\n//           setSesionIniciada(false);\n//         } finally {\n//           setCargando(false);\n//         }\n//       };\n\n//       verificarSesion();\n//     }, []);\n\n//     // Mostrar un indicador de carga mientras se verifica la sesión\n//     if (cargando) {\n//       return <div>Cargando...</div>;\n//     }\n\n//     // Opción 1: Mostrar el componente Login directamente\n//     if (!sesionIniciada) {\n//       return <login />;\n//     }\n\n//     // Opción 2: Redirigir a la página de login\n//     // if (!sesionIniciada) {\n//     //   return <Redirect to=\"/login\" />;\n//     // }\n\n//     return (\n//       <div className=\"wrapper hold-transition skin-blue sidebar-collapse sidebar-mini\">\n//         <Cabezote />\n//         <Menu />\n//         <div className=\"content-wrapper\">\n//           <Switch>\n//             <Route exact path=\"/home\" component={Inicio} />\n//             <Route path=\"/home/usuarios\" component={Usuarios} />\n//             <Route path=\"/home/categorias\" component={Categorias} />\n//             <Route path=\"/home/productos\" component={Productos} />\n//             <Route path=\"/home/salidas\" component={Salidas} />\n//             <Route path=\"/home/clientes\" component={Clientes} />\n//             <Route path=\"/home/ventas\" component={Ventas} />\n//             <Route path=\"/home/crear-venta\" component={CrearVenta} />\n//             <Route path=\"/home/editar-venta\" component={EditarVenta} />\n//             <Route path=\"/home/reportes\" component={Reportes} />\n//             <Route component={NotFound} />\n//           </Switch>\n//         </div>\n//         <Footer />\n//       </div>\n//     );\n//   };\n\n//   export default Home;","map":{"version":3,"names":[],"sources":["C:/Proyectos_react/parqueo-jc-completo-lte/frontend/src/home/home.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Route, Switch, useLocation } from 'react-router-dom';\r\n// import Cabezote from './componentes/Cabezote';\r\n// import Menu from './componentes/Menu';\r\n// import Footer from './componentes/Footer';\r\n\r\n// // Importa tus componentes de contenido\r\n// import Inicio from './componentes/Inicio';\r\n// import Usuarios from './componentes/Usuarios';\r\n// import Categorias from './componentes/Categorias';\r\n// import Productos from './componentes/Productos';\r\n// import Salidas from './componentes/Salidas';\r\n// import Clientes from './componentes/Clientes';\r\n// import Ventas from './componentes/Ventas';\r\n// import CrearVenta from './componentes/CrearVenta';\r\n// import EditarVenta from './componentes/EditarVenta';\r\n// import Reportes from './componentes/Reportes';\r\n// import NotFound from './componentes/NotFound';\r\n\r\n// const Home = () => {\r\n//     const [sesionIniciada, setSesionIniciada] = useState(false);\r\n//     const [cargando, setCargando] = useState(true);\r\n//     const location = useLocation();\r\n  \r\n//     useEffect(() => {\r\n//       // Verificar si la sesión está iniciada\r\n//       const verificarSesion = async () => {\r\n//         try {\r\n//           // Aquí deberías hacer una llamada a tu API para verificar el token\r\n//           const token = localStorage.getItem('token');\r\n//           // Ejemplo de verificación (reemplaza esto con tu lógica real de verificación)\r\n//           if (token) {\r\n//             setSesionIniciada(true);\r\n//           } else {\r\n//             setSesionIniciada(false);\r\n//           }\r\n//         } catch (error) {\r\n//           console.error('Error al verificar la sesión:', error);\r\n//           setSesionIniciada(false);\r\n//         } finally {\r\n//           setCargando(false);\r\n//         }\r\n//       };\r\n  \r\n//       verificarSesion();\r\n//     }, []);\r\n  \r\n//     // Mostrar un indicador de carga mientras se verifica la sesión\r\n//     if (cargando) {\r\n//       return <div>Cargando...</div>;\r\n//     }\r\n  \r\n//     // Opción 1: Mostrar el componente Login directamente\r\n//     if (!sesionIniciada) {\r\n//       return <login />;\r\n//     }\r\n  \r\n//     // Opción 2: Redirigir a la página de login\r\n//     // if (!sesionIniciada) {\r\n//     //   return <Redirect to=\"/login\" />;\r\n//     // }\r\n  \r\n//     return (\r\n//       <div className=\"wrapper hold-transition skin-blue sidebar-collapse sidebar-mini\">\r\n//         <Cabezote />\r\n//         <Menu />\r\n//         <div className=\"content-wrapper\">\r\n//           <Switch>\r\n//             <Route exact path=\"/home\" component={Inicio} />\r\n//             <Route path=\"/home/usuarios\" component={Usuarios} />\r\n//             <Route path=\"/home/categorias\" component={Categorias} />\r\n//             <Route path=\"/home/productos\" component={Productos} />\r\n//             <Route path=\"/home/salidas\" component={Salidas} />\r\n//             <Route path=\"/home/clientes\" component={Clientes} />\r\n//             <Route path=\"/home/ventas\" component={Ventas} />\r\n//             <Route path=\"/home/crear-venta\" component={CrearVenta} />\r\n//             <Route path=\"/home/editar-venta\" component={EditarVenta} />\r\n//             <Route path=\"/home/reportes\" component={Reportes} />\r\n//             <Route component={NotFound} />\r\n//           </Switch>\r\n//         </div>\r\n//         <Footer />\r\n//       </div>\r\n//     );\r\n//   };\r\n  \r\n//   export default Home;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}